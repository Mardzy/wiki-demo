/**
 *
 * Tests 
 * React testing library with React Apollo
 * @see https://www.apollographql.com/docs/react/development-testing/testing/
 *
 */

import React from 'react';
import { render } from '@testing-library/react';
import { MockedProvider, MockedProviderProps } from '@apollo/react-testing';
import { {{ properCase name }} } from '../index';
import
// import { GET_TODOS, CREATE_TODOS } from '../gql'
// import 'jest-dom/extend-expect'; // add some helpful assertions

// Add defaults props for testing
const defaultProps = {}

// Add mocks for Apollo MockedProvider
// const queryMock = {
//   request: {
//     query: "Add query gql" //GET_TODOS,
//   },
//   result: {
//     data: {
//       dog: { id: '1', task: 'Buy Blue Cheese' },
//     },
//   },
// }
// const mutationMock = {
//   request: {
//     mutation: "Add mutation gql", // CREATE_TODOS,
//     variables: {
//       task: 'Buy Iphone',
//     },
//   },
//   result: {
//     data: {
//       dog: { id: '1', task: 'Buy Blue Cheese' },
//     },
//   },
// }


const renderComponent = ({ mocks, props }: MockedProviderProps & { props: any }) => render(
  <MockedProvider mocks={mocks}>
    <{{ properCase name }} {...defaultProps} {...props} />
  </MockedProvider>
)

describe('<{{ properCase name }} />', () => {
  it('should render on load', () => {
    const {} = renderComponent({})
  })
});
